@use 'sass:map';
@use '../font.scss';
@use '../vars';
@use 'shape-util';
@use 'state-util';
@use 'font-util';
@use '../color/work/color' as work-color;

@mixin list($blockItem) {
  &.list,
  & .list {
    @include listBlock($blockItem);
  }
}

@mixin listBlock($blockItem) {
  @include shape-util.baseBackground(map.get($blockItem, 'default'));
  &__group {
    border-bottom: solid 1px map.get($blockItem, 'default', 'border-color');
    &:last-child {
      padding: 0;
      margin: 0;
      border-bottom: 0;
    }
  }
  &__item {
    @include state-util.baseState(map.get($blockItem, 'default', 'background-color'));
    & {
      color: map.get($blockItem, 'default', 'color');
    }
    &_non-interactive:hover,
    &_disabled:hover {
      background-color: map.get($blockItem, 'default', 'background-color');
    }
  }
  &__title {
    color: map.get($blockItem, 'default', 'color');
  }
}

@mixin listDefault() {
  & {
    min-width: 100px;
    display: flex;
    flex-direction: column;
  }
  &__group {
    display: flex;
    flex-direction: column;
    padding-bottom: vars.$space-1;
    margin-bottom: vars.$space-1;

    &:last-child {
      border-bottom: 0;
      padding: 0;
      margin: 0;
    }
  }

  &__item {
    display: flex;
    align-items: center;
    padding: vars.$space-2 vars.$space-3;
    border: 0;
    overflow: hidden;
    text-overflow: ellipsis;
    color: map.get(work-color.$work, 'default', 'color');
    white-space: nowrap;
    @include font-util.fontHelper(font.$font-body2);
    @include state-util.cursorPointer();

    &_disabled {
      opacity: 0.5;
    }

    &:focus,
    &_focus {
      border: solid 1px map.get(work-color.$work, 'focus', 'border-color');
    }
  }

  &__title {
    display: flex;
    align-items: center;
    padding: vars.$space-2 vars.$space-3;
    border: 0;
    overflow: hidden;
    text-overflow: ellipsis;
    color: map.get(work-color.$work, 'default', 'color');
    white-space: nowrap;
    @include font-util.fontHelper(font.$font-title3);
  }
}
